---
description: 
globs: 
alwaysApply: false
---
---
description: "Enforce testing standards for the LeadPoet subnet."
globs:
  - "tests/*.py"
  - "**/__tests__/*.py"
alwaysApply: true
---

# Testing Standards

All LeadPoet subnet components must be thoroughly tested to ensure reliability. The following standards apply:

## Test Structure
- **tests/miner_tests.py**:
  - Test sourcing logic (`get_leads`, `LeadRequest` submission).
  - Test curation logic (Supabase queries, commit-reveal).
  - Mock Supabase and Bittensor interactions.
- **tests/validator_tests.py**:
  - Test legitimacy audits (`validate_leads`, regex, Hunter.io, XGBoost).
  - Test scoring logic (`os_validator_model`, Conversion Score).
  - Mock Supabase, APIs, and ML models.
- **tests/api_tests.py**:
  - Test API endpoints (`POST /leads`, `GET /leads/{query_id}`, `POST /feedback`).
  - Mock Supabase, Bittensor, and API key validation.

## Standards
- Use pytest for testing, with fixtures for Supabase and Bittensor mocks.
- Achieve >90% coverage for core logic (`neurons/*.py`, `Leadpoet/api/*.py`, `*_models/*.py`).
- Test edge cases: invalid inputs, timeouts, failed validations, insufficient prospects.
- Mock external dependencies (e.g., Hunter.io, XGBoost) to ensure deterministic tests.
- Include integration tests for end-to-end flow: sourcing → validation → curation → scoring → feedback.

## Logging
- Log test results to Supabase (`test_logs` table) with `test_name`, `status`, `timestamp`, `error` (if any).
- Ensure no sensitive data (e.g., API keys) is logged.