---
description: On demand, scaffold the base file and folder structure needed for the Leadpoet MVP
globs: 
alwaysApply: false
---
---
description: "On demand, scaffold the base file and folder structure needed for the Leadpoet MVP"A
globs:
  - "**/*"
alwaysApply: false
agentRequested: true
---

# Project Bootstrap

When requested, generate all core directories and files (Supabase client, auth pages, dashboard, API routes, migrations, etc.) with starter boilerplate so the MVP can be built in one go.

# MVP File Structure Enforcement

On project init or rule run, the agent **must** generate the following files and directories (with starter boilerplate) to satisfy the BRD:

1. **Supabase Client**  
   - `lib/supabaseClient.ts`

2. **Authentication**  
   - `pages/_app.tsx` (wraps app with Auth provider)  
   - `pages/login.tsx` (login/signup UI)

3. **Dashboard & Filters**  
   - `pages/dashboard.tsx`  
   - `components/FilterDropdown.tsx`  
   - `types/filters.d.ts` (TypeScript definitions for filter options)

4. **Query Submission API**  
   - `pages/api/submit-query.ts` (serverless route writing to Supabase and calling GCF)

5. **History View & Pagination**  
   - `components/HistoryView.tsx`  
   - `components/Pagination.tsx`

6. **CSV Download**  
   - `components/DownloadCsvButton.tsx`

7. **Google Cloud Function Stub**  
   - `gcf/index.ts` (Node.js/TypeScript stub reading `queryId`, writing mock leads)

8. **Database Schemas & Migrations**  
   - `supabase/migrations/001_create_filter_options.sql`  
   - `supabase/migrations/002_create_queries.sql`  
   - `supabase/migrations/003_create_leads.sql`

9. **Utility Modules**  
   - `lib/csv.ts` (CSV serialization helper)  
   - `lib/validation.ts` (input validation helpers)

10. **Type Definitions**  
    - `types/lead.d.ts`  
    - `types/query.d.ts`

The agent should scaffold each file with appropriate imports, exports, and comments indicating where to fill in logic, ensuring no required file is omitted.  