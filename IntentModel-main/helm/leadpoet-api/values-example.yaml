# Example values file for Leadpoet Intent Model API
# Copy this file and customize for your environment

# Global settings
global:
  environment: production
  imageRegistry: ""
  imagePullSecrets: []

# Image configuration
image:
  repository: leadpoet/intent-model-api
  tag: "1.1.0"
  pullPolicy: IfNotPresent

# Infrastructure endpoints - CUSTOMIZE THESE FOR YOUR ENVIRONMENT
infrastructure:
  database:
    endpoint: "your-db-cluster.region.rds.amazonaws.com"  # Replace with your actual DB endpoint
    prefix: "leadpoet-prod"
  redis:
    endpoint: "your-redis-cluster.region.cache.amazonaws.com"  # Replace with your actual Redis endpoint

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8000
  annotations: {}

# Deployment configuration
deployment:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # Pod security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
  
  # Container security context
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  
  # Liveness and readiness probes
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Horizontal Pod Autoscaler (HPA)
hpa:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15

# Environment variables
env:
  # Database configuration (hosts are constructed from infrastructure section)
  DB_PORT: "5432"
  DB_NAME: "leadpoet"
  
  # Redis configuration (host is from infrastructure section)
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Application configuration
  APP_ENV: "production"
  LOG_LEVEL: "INFO"
  
  # Performance configuration
  LATENCY_P95_THRESHOLD: "400"
  LATENCY_P99_THRESHOLD: "550"
  COST_AVG_THRESHOLD: "0.002"
  COST_P99_THRESHOLD: "0.004"
  
  # Scoring configuration
  BM25_THRESHOLD: "8"
  TIME_DECAY_TAU: "90"
  MAX_LEADS_PER_QUERY: "2000"
  MIN_LEADS_PER_QUERY: "200"
  
  # LLM configuration
  LLM_MAX_TOKENS: "8"
  LLM_TEMPERATURE: "0.2"
  LLM_MAX_CALL_RATIO: "0.3"

# ConfigMap and Secret references
configMap:
  name: "leadpoet-config"
  create: false  # Use existing ConfigMap for other configurations (not DB/Redis)

secret:
  name: "leadpoet-secrets"
  create: false  # Use existing Secret for passwords and API keys

# ServiceAccount configuration
serviceAccount:
  create: true
  name: "leadpoet-api"
  annotations: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network policies
networkPolicy:
  enabled: true
  # Namespace labels for different environments
  namespaceLabels:
    ingress:
      name: "ingress-nginx"  # Override with --set networkPolicy.namespaceLabels.ingress.name=your-ingress-namespace
    monitoring:
      name: "monitoring"     # Override with --set networkPolicy.namespaceLabels.monitoring.name=your-monitoring-namespace
    database:
      name: "database"       # Override with --set networkPolicy.namespaceLabels.database.name=your-database-namespace
    redis:
      name: "redis"          # Override with --set networkPolicy.namespaceLabels.redis.name=your-redis-namespace
  ingressRules: []
  egressRules: []

# Monitoring and metrics
monitoring:
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    port: http
  
  podMonitor:
    enabled: false

# Affinity and anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - leadpoet-api
          topologyKey: kubernetes.io/hostname

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Annotations for deployment
annotations: {}

# Labels for deployment
labels: {} 