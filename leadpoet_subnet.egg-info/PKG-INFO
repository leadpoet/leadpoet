Metadata-Version: 2.1
Name: leadpoet_subnet
Version: 0.0.0
Summary: A Bittensor subnet for decentralized lead generation and validation
Home-page: https://github.com/Pranav-create/Leadpoet
Author: Leadpoet
Author-email: hello@leadpoet.com
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: System :: Distributed Computing
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bittensor>=6.9.3
Requires-Dist: requests>=2.31.0
Requires-Dist: numpy>=1.24.0
Requires-Dist: dnspython>=2.6.1
Requires-Dist: aiohttp>=3.9.5
Requires-Dist: asyncio>=3.4.3
Requires-Dist: pyyaml>=6.0.1
Requires-Dist: argparse>=1.4.0
Requires-Dist: pickle-mixin>=1.0.2

# LeadPoet | Bittensor-Powered Lead Gen

Welcome to LeadPoet, a Bittensor subnet designed to create a decentralized, privacy-compliant lead generation network. Contributors submit lead lists, validators ensure quality, and buyers access tailored leads via API or UI—all powered by the TAO token ecosystem.

## Overview
LeadPoet leverages Bittensor’s decentralized architecture to deliver a scalable, incentivized lead marketplace. Contributors earn TAO rewards for high-quality submissions, validators maintain integrity, and buyers access leads for sales and marketing.

**Nodes:** Contributors (submit leads), Validators (assess quality), Buyers (purchase leads).

**Data Flow:** Encrypted lead lists → Validator scoring → On-chain storage → API/UI access.

**Token:** TAO for staking, rewards, and purchases.

---

## Getting Started

### Prerequisites
- **Hardware:** 16GB RAM, 4-core CPU, 100GB SSD.
- **Software:** Bittensor CLI, Python 3.9+.
- **TAO Wallet:** Required for staking and transactions.

### Installation
#### Install Bittensor:
```bash
pip install bittensor
```

#### Clone this repo:
```bash
git clone https://github.com/[your-repo]/leadpoet-subnet.git
cd leadpoet-subnet
```

---

## For Contributors

### How to Participate
1. Register with a TAO wallet and stake at least **8 TAO**.
2. Prepare your lead list in JSON format:
```json
{
    "leads": [
        {
            "name": "John Doe",
            "email": "john.doe@company.com",
            "company": "Company Inc.",
            "domain": "company.com"
        }
    ],
    "metadata": {"region": "US"}
}
```
3. Encrypt and submit via API:
```bash
curl -X POST -d @leads.json http://subnet-api/submit_leads
```
4. Check status:
```bash
curl http://subnet-api/validation_status?submission_id=<your_submission_id>
```

### Incentives
Earn TAO based on validated leads and quality score (**80-100**).

**Formula:**
```
(Your Validated Leads * Quality Score) / Total Emissions = Your % of Block Rewards
```

**Tips:** Ensure valid emails and compliance (e.g., GDPR anonymization).

---

## For Buyers

### Accessing Leads
1. **Via UI:**
   - Visit [leadpoet.com](https://leadpoet.com).
   - Filter by industry/region, pay with USD (TAO/crypto to be added soon).
2. **Via API:**
```bash
curl -X POST http://localhost:5003/generate_leads -H "Content-Type: application/json" -d '{"industry": "SaaS", "limit": 1}'"
```
3. Output: Decrypted JSON list (recieve a list of leads specific to your industry &/or locaiton), e.g.:
```json
[
      {
            "name": "John Doe",
            "email": "john.doe@company.com",
            "company": "Company Inc.",
            "domain": "company.com"
        }
]
```

---

## Technical Details

### Architecture
- **Contributors:** Submit encrypted JSON lead lists via `/submit_leads`.
- **Validators:** Score submissions for accuracy, relevance, and compliance.
- **Buyers:** Query approved leads via `/leads?industry=X&region=Y`.
- **Storage:** Encrypted lead data on IPFS, metadata on-chain.

### API Endpoints
- `POST /submit_leads`: Upload lead lists.
- `GET /leads?industry=X&region=Y`: Retrieve filtered leads.
- `GET /validation_status?submission_id=Z`: Check submission status.

## Open-Source Models
- `miner_models/get_leads.py`: Generate real leads using Hunter.io and Clearbit. Set `use_open_source_lead_model=True` in miner config.
- `validator_models/os_validator_model.py`: Validate lead quality. Enable with `use_open_source_validator_model=True` in validator config.
- `validator_models/automated_checks.py`: Post-approval checks, auto-integrated when validator approves a batch.
Set API keys in environment variables: `HUNTER_API_KEY`, `CLEARBIT_API_KEY`.

---

## Roadmap
- **MVP:** Core submission, validation, and purchase functionality (this repo).
- **Next:** Detailed governance, compliance audits, and validation protocol options (see `docs/`).
- **Future:** Sharding, testnet deployment, UI enhancements.

---

## Support
- **Email:** [support@leadpoet.com](mailto:support@leadpoet.com).
- **Issues:** File a GitHub issue [here](https://github.com/[your-repo]/issues).

---

## License
MIT License - see [LICENSE](LICENSE) for details.


